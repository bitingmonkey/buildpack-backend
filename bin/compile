#!/usr/bin/env bash
indent() {
    sed -u 's/^/       /'
}

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

### read env var ###
PROCFILE=$(cat "${ENV_DIR}/PROCFILE")
PROJECT_PATH=$(cat "${ENV_DIR}/PROJECT_PATH")
if [[ -z "${PROJECT_PATH}" ]]; then
    PROJECT_PATH="backend"
fi
### read env var ###

# build the actual path
PROJECT_PATH="${BUILD_DIR}/${PROJECT_PATH}"


# step 1 copy PROCFILE env var if any as Procfile
if [[ -z "${PROCFILE}" ]]; then
    echo "PROCFILE env var not set. Skip..." | indent
else
    cp "${PROJECT_PATH}/${PROCFILE}" "${PROJECT_PATH}/Procfile"

    if ! [ $? ]; then
        echo "FAILED to copy a Procfile" | indent
        exit 1
    fi
    echo "Copied ${PROCFILE} as Procfile successfully" | indent
fi

# step 2 copy the PROJECT_PATH to root
if [ -d "$PROJECT_PATH" ]; then
	echo "-----> Subdir buildpack in $PROJECT_PATH"
	echo "creating cache: $CACHE_DIR" | indent
	mkdir -p $CACHE_DIR
	TMP_DIR=`mktemp -d $CACHE_DIR/subdirXXXXX`
	echo "created tmp dir: $TMP_DIR" | indent
	echo "moving working dir: $PROJECT_PATH to $TMP_DIR" | indent
	cp -R $PROJECT_PATH/. $TMP_DIR/
 	echo "cleaning build dir $BUILD_DIR" | indent
	rm -rf $BUILD_DIR/*
	echo "copying preserved work dir from cache $TMP_DIR to build dir $BUILD_DIR" | indent
	cp -R $TMP_DIR/. $BUILD_DIR/
	echo "cleaning tmp dir $TMP_DIR" | indent
	rm -rf $TMP_DIR
	exit 0
fi

echo "FAILED '/backend' subfolder not found, abort..." | indent
exit 1
